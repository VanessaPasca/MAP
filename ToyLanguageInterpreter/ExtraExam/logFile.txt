ExeStack:
		v:=5;
		switch(v)case 0 : print(v)case 1 : print(v)case 2 : print(v)case 5 : IF (6 > 7) THEN (print(6)) ELSE (print(7))default: print(1000)
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		switch(v)case 0 : print(v)case 1 : print(v)case 2 : print(v)case 5 : IF (6 > 7) THEN (print(6)) ELSE (print(7))default: print(1000)
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 0) THEN (print(v)) ELSE (IF (v == 1) THEN (print(v)) ELSE (IF (v == 2) THEN (print(v)) ELSE (IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000)))))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 1) THEN (print(v)) ELSE (IF (v == 2) THEN (print(v)) ELSE (IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000))))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 2) THEN (print(v)) ELSE (IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000)))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (6 > 7) THEN (print(6)) ELSE (print(7))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		print(7)
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		v -> 5
Output:
		7
FileTable
Heap
--------------------------
ExeStack:
		v:=5;
		switch(v)case 0 : print(v)case 1 : print(v)case 2 : print(v)case 5 : IF (6 > 7) THEN (print(6)) ELSE (print(7))default: print(1000)
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		switch(v)case 0 : print(v)case 1 : print(v)case 2 : print(v)case 5 : IF (6 > 7) THEN (print(6)) ELSE (print(7))default: print(1000)
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 0) THEN (print(v)) ELSE (IF (v == 1) THEN (print(v)) ELSE (IF (v == 2) THEN (print(v)) ELSE (IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000)))))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 1) THEN (print(v)) ELSE (IF (v == 2) THEN (print(v)) ELSE (IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000))))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 2) THEN (print(v)) ELSE (IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000)))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (v == 5) THEN (IF (6 > 7) THEN (print(6)) ELSE (print(7))) ELSE (print(1000))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		IF (6 > 7) THEN (print(6)) ELSE (print(7))
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
		print(7)
SymTable:
		v -> 5
Output:
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		v -> 5
Output:
		7
FileTable
Heap
--------------------------
ExeStack:
		(v:=10;new( v , 20 );)
		((new( a , 22 );wH( a , 30 );)(print(a)(print(rh( a );)a:=0;)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		v:=10;
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)(print(rh( a );)a:=0;)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)(print(rh( a );)a:=0;)))
SymTable:
		v -> 10
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( a , 22 );wH( a , 30 );)(print(a)(print(rh( a );)a:=0;)))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		(new( a , 22 );wH( a , 30 );)
		(print(a)(print(rh( a );)a:=0;))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		new( a , 22 );
		wH( a , 30 );
		(print(a)(print(rh( a );)a:=0;))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		wH( a , 30 );
		(print(a)(print(rh( a );)a:=0;))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		(print(a)(print(rh( a );)a:=0;))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(a)
		(print(rh( a );)a:=0;)
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		(print(rh( a );)a:=0;)
SymTable:
		a -> 2
		v -> 1
Output:
		2
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(rh( a );)
		a:=0;
SymTable:
		a -> 2
		v -> 1
Output:
		2
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		a:=0;
SymTable:
		a -> 2
		v -> 1
Output:
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		(v:=10;new( v , 20 );)
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		v:=10;
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
		v -> 10
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		(new( a , 22 );wH( a , 30 );)
		(print(a)print(rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		new( a , 22 );
		wH( a , 30 );
		(print(a)print(rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		wH( a , 30 );
		(print(a)print(rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		(print(a)print(rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(a)
		print(rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
		2
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
SymTable:
		a -> 2
		v -> 1
Output:
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		(v:=10;new( v , 20 );)
		(new( a , 22 );(print(100 + rh( v );)print(100 + rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		v:=10;
		new( v , 20 );
		(new( a , 22 );(print(100 + rh( v );)print(100 + rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v , 20 );
		(new( a , 22 );(print(100 + rh( v );)print(100 + rh( a );)))
SymTable:
		v -> 10
Output:
FileTable
Heap
--------------------------
ExeStack:
		(new( a , 22 );(print(100 + rh( v );)print(100 + rh( a );)))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		new( a , 22 );
		(print(100 + rh( v );)print(100 + rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		(print(100 + rh( v );)print(100 + rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		print(100 + rh( v );)
		print(100 + rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		print(100 + rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
		120
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
SymTable:
		a -> 2
		v -> 1
Output:
		120
		122
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		(v:=10;new( v , 20 );)
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		v:=10;
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
		v -> 10
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		(new( a , 22 );wH( a , 30 );)
		(print(a)print(rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		new( a , 22 );
		wH( a , 30 );
		(print(a)print(rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		wH( a , 30 );
		(print(a)print(rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		(print(a)print(rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(a)
		print(rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
		2
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
SymTable:
		a -> 2
		v -> 1
Output:
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		(v:=10;new( v , 20 );)
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		v:=10;
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v , 20 );
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
		v -> 10
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( a , 22 );wH( a , 30 );)(print(a)print(rh( a );)))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		(new( a , 22 );wH( a , 30 );)
		(print(a)print(rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		new( a , 22 );
		wH( a , 30 );
		(print(a)print(rh( a );))
SymTable:
		v -> 1
Output:
FileTable
Heap
		1 --> 20
--------------------------
ExeStack:
		wH( a , 30 );
		(print(a)print(rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 22
--------------------------
ExeStack:
		(print(a)print(rh( a );))
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(a)
		print(rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		print(rh( a );)
SymTable:
		a -> 2
		v -> 1
Output:
		2
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
SymTable:
		a -> 2
		v -> 1
Output:
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));)
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
ExeStack:
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new( v3 , 4 );
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		countDown(cnt);
		print(cnt)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		print(cnt)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));)
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
ExeStack:
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new( v3 , 4 );
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));)
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
ExeStack:
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new( v3 , 4 );
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		countDown(cnt);
		print(cnt)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		print(cnt)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		10
		30
		40
		10
		10
		1
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));)
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );new latch(cnt, (rh( v2 );));))
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
ExeStack:
		(new( v3 , 4 );new latch(cnt, (rh( v2 );));)
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new( v3 , 4 );
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
ExeStack:
		new latch(cnt, (rh( v2 );));
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v1 , rh( v1 ); * 10 );print(rh( v1 );))countDown(cnt);));
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)((await(cnt);print(cnt))(countDown(cnt);print(cnt))))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));)
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))countDown(cnt);));
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		fork( ((wH( v3 , rh( v3 ); * 10 );print(rh( v3 );))countDown(cnt);));
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		((await(cnt);print(cnt))(countDown(cnt);print(cnt)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		(await(cnt);print(cnt))
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		await(cnt);
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		print(cnt)
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		(countDown(cnt);print(cnt))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		countDown(cnt);
		print(cnt)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		print(cnt)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		2
		30
		40
		3
		4
		1
		1
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 40
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 2
Output:
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 2
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 2
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 2
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 2
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 2
Output:
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 2
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 2
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : 1}
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[]], 2>, { 2 : }
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[]], 2>, { 2 : }
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[]], 2>, { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[]], 2>, { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[]], 2>, { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1]], 1>, { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1, 2]], 0>, { 0 : ,1,2}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1, 2]], 0>, { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1, 2]], 0>, { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1, 2]], 0>, { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1, 2]], 0>, { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- >  <[[1, 2]], 0>, { 0 : ,1,2}
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > [], { 2 : }
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > [], { 2 : }
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > [], { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > [], { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > [], { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1], { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1], { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1], { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1], { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1, 2], { 0 : ,1,2}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1, 2], { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1, 2], { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1, 2], { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1, 2], { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- > [1, 2], { 0 : ,1,2}
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 2 : }
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 2 : }
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 0 : ,1,2}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- > , { 0 : ,1,2}
--------------------------
ExeStack:
		newBarrier(b,2);
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(fork( (print(0)(barrierAwait{b);print(1))));(barrierAwait{b);print(1)))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 2 : }
--------------------------
ExeStack:
		fork( (print(0)(barrierAwait{b);print(1))));
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 2 : }
--------------------------
ExeStack:
		(barrierAwait{b);print(1))
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 2 : }
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 1 : ,1}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 0 : ,1,2}
--------------------------
ExeStack:
		barrierAwait{b);
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 0 : ,1,2}
--------------------------
ExeStack:
		print(1)
SymTable:
		b -> 1
Output:
		0
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 0 : ,1,2}
--------------------------
ExeStack:
SymTable:
		b -> 1
Output:
		0
		1
		1
FileTable
Heap
--------------------------
Barrier:
		1 -- > { 0 : ,1,2}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		(((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));)
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		((new( v1 , 2 );new( v2 , 3 );)(new( v3 , 4 );newBarrier(cnt,rh( v2 ););))
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v1 , 2 );new( v2 , 3 );)
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v1 , 2 );
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
Output:
FileTable
Heap
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v2 , 3 );
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
Output:
FileTable
Heap
		1 --> 2
--------------------------
Barrier:
--------------------------
ExeStack:
		(new( v3 , 4 );newBarrier(cnt,rh( v2 ););)
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		new( v3 , 4 );
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
--------------------------
Barrier:
--------------------------
ExeStack:
		newBarrier(cnt,rh( v2 ););
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v1 , rh( v1 ); * 10 );)print(rh( v1 );)));
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));(barrierAwait{cnt);print(rh( v3 );)))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		fork( ((barrierAwait{cnt);wH( v2 , rh( v2 ); * 10 );)(wH( v2 , rh( v2 ); * 10 );print(rh( v2 );))));
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		(barrierAwait{cnt);print(rh( v3 );))
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 3 : }
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 2 : ,2}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		barrierAwait{cnt);
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 2
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 1 : ,2,1}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v3 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
FileTable
Heap
		1 --> 20
		2 --> 3
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 30
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
		print(rh( v2 );)
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
ExeStack:
SymTable:
		cnt -> 1
		v1 -> 1
		v2 -> 2
		v3 -> 3
Output:
		4
		20
		300
FileTable
Heap
		1 --> 20
		2 --> 300
		3 --> 4
--------------------------
Barrier:
		1 -- > { 0 : ,2,1,3}
--------------------------
